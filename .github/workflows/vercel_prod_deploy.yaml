name: Vercel Production Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: [main]

concurrency:
  group: vercel-prod-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Ensure correct Node & pnpm are available on PATH
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Enable Corepack & pin pnpm
        run: |
          corepack enable
          # Use pnpm 10 to match lockfile v9 (adjust version if you prefer)
          corepack prepare pnpm@10.0.0 --activate
          pnpm --version

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # Pull env from Vercel (prod)
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # Build locally (uses pnpm under the hood; pnpm must be available)
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      # Deploy prebuilt output
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
